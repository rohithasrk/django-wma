# Generated by Django 2.0.4 on 2018-04-22 18:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Container name', max_length=30)),
                ('volume', models.BigIntegerField(help_text='Volume of the container in cubic metres')),
                ('base_area', models.BigIntegerField(help_text='Base area of the container in square metres')),
            ],
            options={
                'abstract': False,
                'swappable': 'DJANGO_WMA_CONTAINER_MODEL',
            },
        ),
        migrations.CreateModel(
            name='WaterQuality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ph', models.DecimalField(decimal_places=8, help_text='pH', max_digits=10)),
                ('do', models.DecimalField(decimal_places=3, help_text='Dissolved oxygen in mg/l', max_digits=10)),
                ('orp', models.DecimalField(decimal_places=6, help_text='Oxidation reduction potential in mV', max_digits=10)),
                ('conductivity', models.DecimalField(decimal_places=3, help_text='Conductivity in uS/cm', max_digits=10)),
                ('turbidity', models.DecimalField(decimal_places=3, help_text='Turbidity in NTU', max_digits=10)),
                ('temperature', models.DecimalField(decimal_places=5, help_text='Temperature in kelvin', max_digits=10)),
                ('fluoride', models.DecimalField(decimal_places=10, help_text='Fluoride ion concentration', max_digits=20)),
                ('calcium', models.DecimalField(decimal_places=10, help_text='Calcium ion concentration', max_digits=20)),
                ('nitrate', models.DecimalField(decimal_places=10, help_text='Nitrate ion concentration', max_digits=20)),
                ('chloride', models.DecimalField(decimal_places=10, help_text='Chloride ion concentration', max_digits=20)),
                ('iodide', models.DecimalField(decimal_places=10, help_text='Iodide ion concentration', max_digits=20)),
                ('cupric', models.DecimalField(decimal_places=10, help_text='Cupric ion concentration', max_digits=20)),
                ('bromide', models.DecimalField(decimal_places=10, help_text='Bromide ion concentration', max_digits=20)),
                ('silver', models.DecimalField(decimal_places=10, help_text='Silver ion concentration', max_digits=20)),
                ('fluoroborate', models.DecimalField(decimal_places=10, help_text='Fluoroborate ion concentration', max_digits=20)),
                ('ammonium', models.DecimalField(decimal_places=10, help_text='Ammonium ion concentration', max_digits=20)),
                ('lithium', models.DecimalField(decimal_places=10, help_text='Lithium ion concentration', max_digits=20)),
                ('magnesium', models.DecimalField(decimal_places=10, help_text='Magnesium ion concentration', max_digits=20)),
                ('nitrite', models.DecimalField(decimal_places=10, help_text='Nitrite ion concentration', max_digits=20)),
                ('perchlorate', models.DecimalField(decimal_places=10, help_text='Perchlorate ion concentration', max_digits=20)),
                ('potassium', models.DecimalField(decimal_places=10, help_text='Potassium ion concentration', max_digits=20)),
                ('sodium', models.DecimalField(decimal_places=10, help_text='Sodium ion concentration', max_digits=20)),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.DJANGO_WMA_CONTAINER_MODEL)),
            ],
            options={
                'abstract': False,
                'swappable': 'DJANGO_WMA_WATERQUALITY_MODEL',
            },
        ),
        migrations.CreateModel(
            name='WaterQuantity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume', models.BigIntegerField(help_text='Volume of django_wma available in cubic metres')),
                ('height', models.BigIntegerField(help_text='Height of django_wma level in metres')),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.DJANGO_WMA_CONTAINER_MODEL)),
            ],
            options={
                'abstract': False,
                'swappable': 'DJANGO_WMA_WATERQUANTITY_MODEL',
            },
        ),
    ]
